{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heyam\\\\Desktop\\\\Github\\\\Covid-19-tracker\\\\src\\\\LineGraph.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        // Include a dollar sign in the ticks\n        callback: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\nconst buildChartData = (data, casesType) => {\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  return chartData;\n};\nfunction LineGraph(_ref) {\n  let {\n    casesType\n  } = _ref;\n  const [data, setData] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => {\n        return response.json();\n      }).then(data => {\n        let chartData = buildChartData(data, casesType);\n        setData(chartData);\n        console.log(chartData);\n        // buildChart(chartData);\n      });\n    };\n\n    fetchData();\n  }, [casesType]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, (data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/React.createElement(Line, {\n    data: {\n      datasets: [{\n        backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n        borderColor: \"#CC1034\",\n        data: data\n      }]\n    },\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }));\n}\nexport default LineGraph;","map":{"version":3,"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","LineGraph","setData","fetchData","fetch","then","response","json","console","log","length","datasets","backgroundColor","borderColor"],"sources":["C:/Users/heyam/Desktop/Github/Covid-19-tracker/src/LineGraph.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType }) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          let chartData = buildChartData(data, casesType);\r\n          setData(chartData);\r\n          console.log(chartData);\r\n          // buildChart(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,OAAO,MAAM,SAAS;AAE7B,MAAMC,OAAO,GAAG;EACdC,MAAM,EAAE;IACNC,OAAO,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACRC,KAAK,EAAE;MACLC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,mBAAmB,EAAE,KAAK;EAC1BC,QAAQ,EAAE;IACRC,IAAI,EAAE,OAAO;IACbC,SAAS,EAAE,KAAK;IAChBC,SAAS,EAAE;MACTC,KAAK,EAAE,UAAUC,WAAW,EAAEC,IAAI,EAAE;QAClC,OAAOd,OAAO,CAACa,WAAW,CAACE,KAAK,CAAC,CAACC,MAAM,CAAC,MAAM,CAAC;MAClD;IACF;EACF,CAAC;EACDC,MAAM,EAAE;IACNC,KAAK,EAAE,CACL;MACEC,IAAI,EAAE,MAAM;MACZC,IAAI,EAAE;QACJJ,MAAM,EAAE,UAAU;QAClBK,aAAa,EAAE;MACjB;IACF,CAAC,CACF;IACDC,KAAK,EAAE,CACL;MACEC,SAAS,EAAE;QACTpB,OAAO,EAAE;MACX,CAAC;MACDqB,KAAK,EAAE;QACL;QACAC,QAAQ,EAAE,UAAUV,KAAK,EAAEW,KAAK,EAAEC,MAAM,EAAE;UACxC,OAAO3B,OAAO,CAACe,KAAK,CAAC,CAACC,MAAM,CAAC,IAAI,CAAC;QACpC;MACF;IACF,CAAC;EAEL;AACF,CAAC;AAED,MAAMY,cAAc,GAAG,CAACd,IAAI,EAAEe,SAAS,KAAK;EAC1C,IAAIC,SAAS,GAAG,EAAE;EAClB,IAAIC,aAAa;EACjB,KAAK,IAAIC,IAAI,IAAIlB,IAAI,CAACmB,KAAK,EAAE;IAC3B,IAAIF,aAAa,EAAE;MACjB,IAAIG,YAAY,GAAG;QACjBC,CAAC,EAAEH,IAAI;QACPI,CAAC,EAAEtB,IAAI,CAACe,SAAS,CAAC,CAACG,IAAI,CAAC,GAAGD;MAC7B,CAAC;MACDD,SAAS,CAACO,IAAI,CAACH,YAAY,CAAC;IAC9B;IACAH,aAAa,GAAGjB,IAAI,CAACe,SAAS,CAAC,CAACG,IAAI,CAAC;EACvC;EACA,OAAOF,SAAS;AAClB,CAAC;AAED,SAASQ,SAAS,OAAgB;EAAA,IAAf;IAAET;EAAU,CAAC;EAC9B,MAAM,CAACf,IAAI,EAAEyB,OAAO,CAAC,GAAG1C,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAM0C,SAAS,GAAG,YAAY;MAC5B,MAAMC,KAAK,CAAC,4DAA4D,CAAC,CACtEC,IAAI,CAAEC,QAAQ,IAAK;QAClB,OAAOA,QAAQ,CAACC,IAAI,EAAE;MACxB,CAAC,CAAC,CACDF,IAAI,CAAE5B,IAAI,IAAK;QACd,IAAIgB,SAAS,GAAGF,cAAc,CAACd,IAAI,EAAEe,SAAS,CAAC;QAC/CU,OAAO,CAACT,SAAS,CAAC;QAClBe,OAAO,CAACC,GAAG,CAAChB,SAAS,CAAC;QACtB;MACF,CAAC,CAAC;IACN,CAAC;;IAEDU,SAAS,EAAE;EACb,CAAC,EAAE,CAACX,SAAS,CAAC,CAAC;EAEf,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,CAAAf,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEiC,MAAM,IAAG,CAAC,iBACf,oBAAC,IAAI;IACH,IAAI,EAAE;MACJC,QAAQ,EAAE,CACR;QACEC,eAAe,EAAE,wBAAwB;QACzCC,WAAW,EAAE,SAAS;QACtBpC,IAAI,EAAEA;MACR,CAAC;IAEL,CAAE;IACF,OAAO,EAAEb,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAEpB,CACG;AAEV;AAEA,eAAeqC,SAAS"},"metadata":{},"sourceType":"module"}