{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heyam\\\\Desktop\\\\Github\\\\Covid-19-tracker\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport LineGraph from \"./LineGraph\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\nconst App = () => {\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  });\n  const [mapZoom, setMapZoom] = useState(3);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        let sortedData = sortData(data);\n        setCountries(countries);\n        setMapCountries(data);\n        setTableData(sortedData);\n      });\n    };\n    getCountriesData();\n  }, []);\n  console.log(casesType);\n  const onCountryChange = async e => {\n    const countryCode = e.target.value;\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setInputCountry(countryCode);\n      setCountryInfo(data);\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \" RASA COVID-19 Tracker\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"app__dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    value: country,\n    onChange: onCountryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"worldwide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"Worldwide\"), countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n    value: country.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, country.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    onClick: e => setCasesType(\"cases\"),\n    title: \"Coronavirus Cases\",\n    isRed: true,\n    active: casesType === \"cases\",\n    cases: prettyPrintStat(countryInfo.todayCases),\n    total: numeral(countryInfo.cases).format(\"0.0a\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    onClick: e => setCasesType(\"recovered\"),\n    title: \"Recovered\",\n    active: casesType === \"recovered\",\n    cases: prettyPrintStat(countryInfo.todayRecovered),\n    total: numeral(countryInfo.recovered).format(\"0.0a\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    onClick: e => setCasesType(\"deaths\"),\n    title: \"Deaths\",\n    isRed: true,\n    active: casesType === \"deaths\",\n    cases: prettyPrintStat(countryInfo.todayDeaths),\n    total: numeral(countryInfo.deaths).format(\"0.0a\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    countries: mapCountries,\n    casesType: casesType,\n    center: mapCenter,\n    zoom: mapZoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"app__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Live Cases by Country\"), /*#__PURE__*/React.createElement(Table, {\n    countries: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Worldwide new \", casesType), /*#__PURE__*/React.createElement(LineGraph, {\n    casesType: casesType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  })))));\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","LineGraph","Table","sortData","prettyPrintStat","numeral","Map","App","country","setInputCountry","countryInfo","setCountryInfo","countries","setCountries","mapCountries","setMapCountries","tableData","setTableData","casesType","setCasesType","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","console","log","onCountryChange","e","countryCode","target","url","long","todayCases","cases","format","todayRecovered","recovered","todayDeaths","deaths"],"sources":["C:/Users/heyam/Desktop/Github/Covid-19-tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport InfoBox from \"./InfoBox\";\r\nimport LineGraph from \"./LineGraph\";\r\nimport Table from \"./Table\";\r\nimport { sortData, prettyPrintStat } from \"./util\";\r\nimport numeral from \"numeral\";\r\nimport Map from \"./Map\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nconst App = () => {\r\n  const [country, setInputCountry] = useState(\"worldwide\");\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n  const [countries, setCountries] = useState([]);\r\n  const [mapCountries, setMapCountries] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\r\n  const [mapZoom, setMapZoom] = useState(3);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountryInfo(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const countries = data.map((country) => ({\r\n            name: country.country,\r\n            value: country.countryInfo.iso2,\r\n          }));\r\n          let sortedData = sortData(data);\r\n          setCountries(countries);\r\n          setMapCountries(data);\r\n          setTableData(sortedData);\r\n        });\r\n    };\r\n\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  console.log(casesType);\r\n\r\n  const onCountryChange = async (e) => {\r\n    const countryCode = e.target.value;\r\n\r\n    const url =\r\n      countryCode === \"worldwide\"\r\n        ? \"https://disease.sh/v3/covid-19/all\"\r\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n    await fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setInputCountry(countryCode);\r\n        setCountryInfo(data);\r\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\r\n        setMapZoom(4);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app__left\">\r\n        <div className=\"app__header\">\r\n          <h1> RASA COVID-19 Tracker</h1>\r\n          <FormControl className=\"app__dropdown\">\r\n            <Select\r\n              variant=\"outlined\"\r\n              value={country}\r\n              onChange={onCountryChange}\r\n            >\r\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\r\n              {countries.map((country) => (\r\n                <MenuItem value={country.value}>{country.name}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"app__stats\">\r\n          <InfoBox\r\n            onClick={(e) => setCasesType(\"cases\")}\r\n            title=\"Coronavirus Cases\"\r\n            isRed\r\n            active={casesType === \"cases\"}\r\n            cases={prettyPrintStat(countryInfo.todayCases)}\r\n            total={numeral(countryInfo.cases).format(\"0.0a\")}\r\n          />\r\n          <InfoBox\r\n            onClick={(e) => setCasesType(\"recovered\")}\r\n            title=\"Recovered\"\r\n            active={casesType === \"recovered\"}\r\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\r\n            total={numeral(countryInfo.recovered).format(\"0.0a\")}\r\n          />\r\n          <InfoBox\r\n            onClick={(e) => setCasesType(\"deaths\")}\r\n            title=\"Deaths\"\r\n            isRed\r\n            active={casesType === \"deaths\"}\r\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\r\n            total={numeral(countryInfo.deaths).format(\"0.0a\")}\r\n          />\r\n        </div>\r\n        <Map\r\n          countries={mapCountries}\r\n          casesType={casesType}\r\n          center={mapCenter}\r\n          zoom={mapZoom}\r\n        />\r\n      </div>\r\n      <Card className=\"app__right\">\r\n        <CardContent>\r\n          <div className=\"app__information\">\r\n            <h3>Live Cases by Country</h3>\r\n            <Table countries={tableData} />\r\n            <h3>Worldwide new {casesType}</h3>\r\n            <LineGraph casesType={casesType} />\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}